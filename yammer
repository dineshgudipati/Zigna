import requests
from datetime import date, timedelta
import os
import zipfile
import pandas as pd
import numpy as np
from datetime import datetime

# Bearer token for authentication
bearer_token = "39881-WpJ9XayUXeK6IVXSnvHg"

# Define the start and end dates
start_date = date(2023, 6, 1)
end_date = date.today()

# Generate dates for every three days
dates = []
current_date = start_date
while current_date < end_date:
    dates.append(current_date)
    current_date += timedelta(days=3)

# Include the end date if the difference is less than 3 days
if (end_date - current_date).days < 3:
    dates.append(end_date)

# Specify your desired output path
output_path = "C:/Users/si736338/Final/result_sheets/hottopics/yammerexport"

# Specify the CSV files to extract from each zip file
files_to_extract = ['Groups.csv', 'Messages.csv', 'Tags.csv', 'Topics.csv', 'Users.csv']

# Iterate over the dates and make API requests
for i in range(len(dates) - 1):
    since_date = dates[i]
    to_date = dates[i] + timedelta(days=2)  # Add 2 days to cover the three-day period

    url = f"https://www.yammer.com/api/v1/export?since={since_date}&to={to_date}"
    headers = {
        "Authorization": f"Bearer {bearer_token}"
    }

    response = requests.get(url, headers=headers, verify=False)

    # Save the response content as a zip file
    zip_filename = f"output_{since_date}.zip"
    zip_filepath = os.path.join(output_path, zip_filename)

    with open(zip_filepath, 'wb') as f:
        f.write(response.content)

    print(f"Zip file saved: {zip_filepath}")

    # Extract specific CSV files from the zip file and modify them
    with zipfile.ZipFile(zip_filepath, 'r') as zip_file:
        for file_to_extract in files_to_extract:
            if file_to_extract in zip_file.namelist():
                csv_file = zip_file.extract(file_to_extract, path=output_path)

                # Read the extracted CSV file into a DataFrame
                df = pd.read_csv(csv_file)

                # Add new columns to the DataFrame
                df['DateFrom'] = since_date
                df['DateTo'] = to_date
                df['ctl_ins_ts'] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                df["ctl_elt_job_id"] = np.nan
                df["ctl_src_cd"] = "swoop_analytics"
                df["src_filename".upper()] = f"{file_to_extract.split('.')[0]}_{since_date}.csv"
                df['src_line_no'] = df.index
                
                # Save the updated DataFrame to a new CSV file
                new_file_name = f"{file_to_extract.split('.')[0]}_{since_date}.csv"
                new_file_path = os.path.join(output_path, new_file_name)
                df.to_csv(new_file_path, index=False)
                
                print(f"Modified CSV file saved: {new_file_path}")
